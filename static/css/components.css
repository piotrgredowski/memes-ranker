/* shadcn/ui inspired components */

/* Button Component */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  border-radius: calc(var(--radius) - 2px);
  font-size: 0.875rem;
  font-weight: 500;
  transition: all 0.2s;
  cursor: pointer;
  border: none;
  text-decoration: none;
  position: relative;
  padding: 0.5rem 1rem;
  height: 2.5rem;
}

.btn:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

.btn:disabled {
  pointer-events: none;
  opacity: 0.5;
}

.btn-primary {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

.btn-primary:hover {
  background-color: hsl(var(--primary) / 0.9);
}

.btn-secondary {
  background-color: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
}

.btn-secondary:hover {
  background-color: hsl(var(--secondary) / 0.8);
}

.btn-destructive {
  background-color: hsl(var(--destructive));
  color: hsl(var(--destructive-foreground));
}

.btn-destructive:hover {
  background-color: hsl(var(--destructive) / 0.9);
}

.btn-outline {
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
}

.btn-outline:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.btn-ghost {
  background-color: transparent;
  color: hsl(var(--foreground));
}

.btn-ghost:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.btn-sm {
  height: 2rem;
  padding: 0.25rem 0.75rem;
  font-size: 0.75rem;
}

.btn-lg {
  height: 3rem;
  padding: 0.5rem 2rem;
  font-size: 1rem;
}

/* Card Component */
.card {
  border-radius: calc(var(--radius) - 2px);
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--card));
  color: hsl(var(--card-foreground));
  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
}

.card-header {
  display: flex;
  flex-direction: column;
  space-gap: 1.5rem;
  padding: 1.5rem;
}

.card-title {
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 1;
  letter-spacing: -0.025em;
}

.card-description {
  color: hsl(var(--muted-foreground));
  font-size: 0.875rem;
}

.card-content {
  padding: 1.5rem;
  padding-top: 0;
}

.card-footer {
  display: flex;
  align-items: center;
  padding: 1.5rem;
  padding-top: 0;
}

/* Badge Component */
.badge {
  display: inline-flex;
  align-items: center;
  border-radius: calc(var(--radius) - 2px);
  padding: 0.25rem 0.625rem;
  font-size: 0.75rem;
  font-weight: 500;
  line-height: 1;
  transition: all 0.2s;
  border: 1px solid transparent;
}

.badge-default {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

.badge-secondary {
  background-color: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
}

.badge-destructive {
  background-color: hsl(var(--destructive));
  color: hsl(var(--destructive-foreground));
}

.badge-outline {
  color: hsl(var(--foreground));
  border: 1px solid hsl(var(--border));
}

/* Input Component */
.input {
  display: flex;
  height: 2.5rem;
  width: 100%;
  border-radius: calc(var(--radius) - 2px);
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--background));
  padding: 0.5rem 0.75rem;
  font-size: 0.875rem;
  color: hsl(var(--foreground));
  transition: all 0.2s;
}

.input:focus {
  outline: none;
  border-color: hsl(var(--ring));
  box-shadow: 0 0 0 2px hsl(var(--ring) / 0.2);
}

.input:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.input::placeholder {
  color: hsl(var(--muted-foreground));
}

/* Slider Component */
.slider {
  position: relative;
  display: flex;
  width: 100%;
  touch-action: none;
  align-items: center;
  margin: 1rem 0;
}

.slider-track {
  position: relative;
  height: 1rem;
  width: 100%;
  flex-grow: 1;
  overflow: hidden;
  border-radius: 9999px;
  background-color: hsl(var(--secondary));
}

.slider-range {
  position: absolute;
  height: 100%;
  background-color: hsl(var(--primary));
}

.slider-thumb {
  display: block;
  height: 1.5rem;
  width: 1.5rem;
  border-radius: 50%;
  border: 2px solid hsl(var(--primary));
  background-color: hsl(var(--background));
  cursor: pointer;
  transition: all 0.2s;
}

.slider-thumb:hover {
  background-color: hsl(var(--accent));
}

.slider-thumb:focus {
  outline: none;
  box-shadow: 0 0 0 2px hsl(var(--ring));
}

.slider-thumb:disabled {
  pointer-events: none;
  opacity: 0.5;
}

/* Form Component */
.form-group {
  margin-bottom: 1.5rem;
}

.form-label {
  display: block;
  margin-bottom: 0.5rem;
  font-size: 0.875rem;
  font-weight: 500;
  color: hsl(var(--foreground));
}

.form-description {
  font-size: 0.75rem;
  color: hsl(var(--muted-foreground));
  margin-top: 0.25rem;
}

.form-error {
  font-size: 0.75rem;
  color: hsl(var(--destructive));
  margin-top: 0.25rem;
}

/* Table Component */
.table {
  width: 100%;
  caption-side: bottom;
  border-collapse: collapse;
  font-size: 0.875rem;
}

.table-header {
  border-bottom: 1px solid hsl(var(--border));
}

.table-row {
  border-bottom: 1px solid hsl(var(--border));
  transition: background-color 0.2s;
}

.table-row:hover {
  background-color: hsl(var(--muted) / 0.5);
}

.table-head {
  height: 3rem;
  padding: 0.75rem;
  text-align: left;
  font-weight: 500;
  color: hsl(var(--muted-foreground));
}

.table-cell {
  padding: 0.75rem;
  vertical-align: middle;
}

/* Progress Component */
.progress {
  position: relative;
  height: 1rem;
  width: 100%;
  overflow: hidden;
  border-radius: 9999px;
  background-color: hsl(var(--secondary));
}

.progress-indicator {
  height: 100%;
  width: 100%;
  flex: 1;
  background-color: hsl(var(--primary));
  transition: all 0.2s;
  transform: translateX(-100%);
}

/* Dialog Component */
.dialog-overlay {
  position: fixed;
  inset: 0;
  z-index: 50;
  background-color: rgb(0 0 0 / 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  animation: fadeIn 0.2s ease-in-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.dialog-content {
  position: relative;
  background-color: hsl(var(--background));
  border-radius: calc(var(--radius) - 2px);
  border: 1px solid hsl(var(--border));
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  max-width: 32rem;
  width: 90%;
  max-height: 90vh;
  overflow-y: auto;
  animation: slideIn 0.2s ease-in-out;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-10px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.dialog-header {
  display: flex;
  flex-direction: column;
  space-gap: 1.5rem;
  padding: 1.5rem;
  padding-bottom: 0;
}

.dialog-title {
  font-size: 1.125rem;
  font-weight: 600;
  line-height: 1;
  letter-spacing: -0.025em;
}

.dialog-description {
  color: hsl(var(--muted-foreground));
  font-size: 0.875rem;
}

.dialog-body {
  padding: 1.5rem;
}

.dialog-footer {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  padding: 1.5rem;
  padding-top: 0;
}

@media (min-width: 640px) {
  .dialog-footer {
    flex-direction: row;
    justify-content: flex-end;
  }
}

/* Utility classes */
.hidden {
  display: none;
}

.visible {
  display: block;
}

/* Meme-specific styles */
.meme-container {
  position: relative;
  max-width: 500px;
  margin: 0 auto;
}

.meme-image {
  width: 100%;
  height: auto;
  border-radius: calc(var(--radius) - 2px);
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
}

.rating-section {
  margin-top: 2rem;
  text-align: center;
}

.rating-display {
  font-size: 2rem;
  font-weight: 600;
  color: hsl(var(--primary));
  margin: 1rem 0;
}

/* QR Code Widget */
.qr-widget {
  position: fixed;
  right: 1rem;
  top: 50%;
  transform: translateY(-50%);
  z-index: 40;
  transition: all 0.3s ease;
}

.qr-widget-toggle {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  border: 2px solid hsl(var(--background));
  cursor: pointer;
  box-shadow: 0 4px 12px 0 rgb(0 0 0 / 0.15);
  transition: all 0.2s;
  font-size: 1.25rem;
  font-weight: 600;
}

.qr-widget-toggle:hover {
  background-color: hsl(var(--primary) / 0.9);
  transform: scale(1.05);
}

.qr-widget-panel {
  position: absolute;
  right: 0;
  top: 0;
  width: 220px;
  background-color: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  border-radius: calc(var(--radius) - 2px);
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  opacity: 0;
  visibility: hidden;
  transform: translateX(10px);
  transition: all 0.3s ease;
  padding: 1rem;
  text-align: center;
}

.qr-widget-panel.visible {
  opacity: 1;
  visibility: visible;
  transform: translateX(0);
}

.qr-widget-panel h3 {
  margin: 0 0 0.5rem 0;
  font-size: 0.875rem;
  font-weight: 600;
  color: hsl(var(--foreground));
}

.qr-widget-panel p {
  margin: 0 0 1rem 0;
  font-size: 0.75rem;
  color: hsl(var(--muted-foreground));
}

.qr-widget-panel img {
  max-width: 100%;
  height: auto;
  border-radius: calc(var(--radius) - 4px);
}

.qr-widget-close {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 50%;
  background-color: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
  border: none;
  cursor: pointer;
  font-size: 0.75rem;
  font-weight: 600;
  transition: all 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
}

.qr-widget-close:hover {
  background-color: hsl(var(--secondary) / 0.8);
}

/* Legacy QR code container for backwards compatibility */
.qr-code-container {
  text-align: center;
  padding: 1rem;
  border-radius: calc(var(--radius) - 2px);
  background-color: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  max-width: 200px;
  margin: 0 auto;
}

.qr-code-container img {
  max-width: 100%;
  height: auto;
}
